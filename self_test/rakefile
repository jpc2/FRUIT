require 'rubygems'
require 'fruit_processor'
require 'rake/clean'
include Rake::DSL if defined?(Rake::DSL)
load "../rake_base.rb"

$build_dir = "./"
$source_dirs = ["./", "../src/"]
$goal='fruit_self_test_driver'
$main = "fruit_driver_gen.f90"
$show_info = true

$coverage_fruit_f90 = true

fp = FruitProcessor.new
fp.xml_prefix = "fruit_self_test."
fp.shuffle = true            #if true order of methods will be random
fp.pre_process($source_dirs) #It generates fruit_*_gen.f90
load "../rake_estimate.rb"   #Load this after fruit_*_gen.f90 generated.
load "../rake_base_deps.rb"  #It uses SRC and OBJ updated by rake_estimate.rb


task :default => [:run]

desc "Compile self-test and run"
task :run => [$goal] do
  sh ("./#{$goal}")
end

task :coverage => $for_coverage.clone.push(:run) do
  if $gcov
    sh "gcov " + $for_coverage.join(" ")
  end
	if $prof_genx
	  sh "profmerge"
    sh "codecov"
	end
end

desc "Using Valgrind run self-test"
task :valgrind => [$goal] do
  sh ("valgrind --leak-check=full --show-reachable=yes ./#{$goal}")
end

CLEAN.include("fruit_self_test_driver", "fruit_self_test_driver.exe", "override_stdout.txt")


